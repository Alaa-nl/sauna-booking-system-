version: "3"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/app:/app
    restart: unless-stopped
    depends_on:
      php:
        condition: service_healthy
      frontend:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - frontend-network
      - backend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  php:
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./backend/app:/app
      - ./backend/healthcheck.php:/app/healthcheck.php
    environment:
      DB_HOST: mysql
      DB_NAME: sauna_booking_system
      DB_USER: sauna_user
      DB_PASSWORD: sauna_password
      DB_CHARSET: utf8mb4
      JWT_SECRET: your_jwt_secret_key_change_in_production
      JWT_ISSUER: sauna-booking-api
      JWT_AUDIENCE: sauna-booking-frontend
      JWT_EXPIRY: "1800"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "php", "/app/healthcheck.php"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  mysql:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: sauna_user
      MYSQL_PASSWORD: sauna_password
      MYSQL_DATABASE: sauna_booking_system
    volumes:
      - mysqldata:/var/lib/mysql
      - ./backend/sql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "sauna_user", "-psauna_password"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_USER: sauna_user
      PMA_PASSWORD: sauna_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - backend-network

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  frontend-network:
  backend-network:

volumes:
  mysqldata: {}